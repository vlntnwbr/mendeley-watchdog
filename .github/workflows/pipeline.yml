name: checks

on: 
  push:
    tags: 
      - v*
    branches:
      - master
      - vs-code-task
      - publish-test

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Set up Environment
      id: prep
      run: |
        pip install -q pipenv build
        pipenv install -d
        name=$(python setup.py --name)
        version=$(python setup.py --version)
        outdir="dist"
        sdist=${outdir}/${name}-${version}.tar.gz
        echo "::set-output name=build_dir::${outdir}"
        echo "::set-output name=package::mendeley_watchdog"
        echo "::set-output name=name::${name}"
        echo "::set-output name=sdist::${sdist}"
    - name: Flake8  # only on pushes to branch
      if: ${{ startsWith( github.ref, 'refs/heads/' ) }}
      id: flake8
      run : pipenv run flake8 --doctests --max-doc-length 72 ${{ steps.prep.outputs.package }}
    - name: Pylint  # only on pushes to branch
      if: ${{ startsWith( github.ref, 'refs/heads/' ) }}
      id: pylint
      run: pipenv run pylint -f colorized ${{ steps.prep.outputs.package }} || pipenv run pylint-exit -efail -wfail $?
    - name: Build 
      id: build
      run: |
        pipenv run pipenv --rm
        pip uninstall -y pipenv
        python -m build --sdist --wheel --outdir dist/
    - name: Deploy  
      id: deploy
      run: python -m pip install ${{ steps.prep.outputs.sdist }}
    - name: Create GitHub Release  # only on tags starting with v
      if: ${{ startsWith( github.ref, 'refs/tags/v' ) }}
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ steps.prep.outputs.name }} ${{ github.ref }}
    - name: Upload source distribution ðŸ“¦ to GitHub Release   # only on tags starting with v
      if: ${{ startsWith( github.ref, 'refs/tags/v' ) }}
      id: upload
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ${{ steps.prep.outputs.sdist }}
        asset_name: ${{ steps.prep.outputs.name }}.tar.gz
        asset_content_type: application/gzip
    - name: Publish distribution ðŸ“¦ to Test PyPI  # only on pushes to publish-test branch
      if: ${{ github.ref == 'refs/heads/publish-test' }}
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_TEST_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
